From fafe53d1f7e2d235277295492495e192c9ca2473 Mon Sep 17 00:00:00 2001
From: Andreas Buerkler <andreas.buerkler@enclustra.com>
Date: Fri, 12 Aug 2022 17:02:51 +0200
Subject: [PATCH] Use only high memory region

---
 arch/riscv/cpu/generic/dram.c | 3 ++-
 drivers/mmc/sdhci-adma.c      | 1 +
 drivers/mmc/sdhci.c           | 7 ++++++-
 include/sdhci.h               | 2 ++
 4 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/arch/riscv/cpu/generic/dram.c b/arch/riscv/cpu/generic/dram.c
index 1fdc7837b8..d078124c63 100644
--- a/arch/riscv/cpu/generic/dram.c
+++ b/arch/riscv/cpu/generic/dram.c
@@ -23,6 +23,7 @@ int dram_init_banksize(void)
 
 ulong board_get_usable_ram_top(ulong total_size)
 {
+#if !defined(CONFIG_TARGET_ENCLUSTRA_MERCURY_MP1)
 	/*
 	 * Ensure that we run from first 4GB so that all
 	 * addresses used by U-Boot are 32bit addresses.
@@ -33,6 +34,6 @@ ulong board_get_usable_ram_top(ulong total_size)
 	 */
 	if (gd->ram_top >= SZ_4G)
 		return SZ_4G - 1;
-
+#endif
 	return gd->ram_top;
 }
diff --git a/drivers/mmc/sdhci-adma.c b/drivers/mmc/sdhci-adma.c
index 2ec057fbb1..1406643bd8 100644
--- a/drivers/mmc/sdhci-adma.c
+++ b/drivers/mmc/sdhci-adma.c
@@ -24,6 +24,7 @@ static void sdhci_adma_desc(struct sdhci_adma_desc *desc,
 	desc->addr_lo = lower_32_bits(addr);
 #ifdef CONFIG_DMA_ADDR_T_64BIT
 	desc->addr_hi = upper_32_bits(addr);
+	desc->rsvd1 = 0;
 #endif
 }
 
diff --git a/drivers/mmc/sdhci.c b/drivers/mmc/sdhci.c
index d9ab6a0a83..8292f9ae9b 100644
--- a/drivers/mmc/sdhci.c
+++ b/drivers/mmc/sdhci.c
@@ -77,6 +77,7 @@ static void sdhci_prepare_dma(struct sdhci_host *host, struct mmc_data *data,
 	dma_addr_t dma_addr;
 	unsigned char ctrl;
 	void *buf;
+	u16 hv64 = 0;
 
 	if (data->flags == MMC_DATA_READ)
 		buf = data->dest;
@@ -85,8 +86,12 @@ static void sdhci_prepare_dma(struct sdhci_host *host, struct mmc_data *data,
 
 	ctrl = sdhci_readb(host, SDHCI_HOST_CONTROL);
 	ctrl &= ~SDHCI_CTRL_DMA_MASK;
-	if (host->flags & USE_ADMA64)
+	if (host->flags & USE_ADMA64) {
 		ctrl |= SDHCI_CTRL_ADMA64;
+		hv64 = sdhci_readw(host, SDHCI_HOST_CONTROL2);
+		hv64 |= SDHCI_CTRL_HV4E_A64B_ENABLE;
+		sdhci_writew(host, hv64, SDHCI_HOST_CONTROL2);
+	}
 	else if (host->flags & USE_ADMA)
 		ctrl |= SDHCI_CTRL_ADMA32;
 	sdhci_writeb(host, ctrl, SDHCI_HOST_CONTROL);
diff --git a/include/sdhci.h b/include/sdhci.h
index 0ae9471ad7..26b3f0c3f0 100644
--- a/include/sdhci.h
+++ b/include/sdhci.h
@@ -163,6 +163,7 @@
 #define  SDHCI_CTRL_EXEC_TUNING	0x0040
 #define  SDHCI_CTRL_TUNED_CLK	0x0080
 #define  SDHCI_CTRL_PRESET_VAL_ENABLE	0x8000
+#define  SDHCI_CTRL_HV4E_A64B_ENABLE	0x3000
 
 #define SDHCI_CAPABILITIES	0x40
 #define  SDHCI_TIMEOUT_CLK_MASK	0x0000003F
@@ -300,6 +301,7 @@ struct sdhci_adma_desc {
 	u32 addr_lo;
 #ifdef CONFIG_DMA_ADDR_T_64BIT
 	u32 addr_hi;
+	u32 rsvd1;
 #endif
 } __packed;
 
-- 
2.25.1

